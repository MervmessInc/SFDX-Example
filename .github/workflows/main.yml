# This is a basic workflow to help you get started with Actions

name: SFDX-Example-CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [synchronize, ready_for_review ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    env:
      NODE_VERSION: "12"
      PMD_RULESET_FILE: "./pmd-apex-ruleset.xml"
      PMD_RESULTS_FILE: "./pmd.xml"
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: PMD Apex Code Analysis
        uses: sfdx-actions/setup-pmd@v1
        run: |
          pmd -dir . -format text -rulesets ${{env.PMD_RULESET_FILE}} -reportfile ${{env.PMD_RESULTS_FILE}} -failOnViolation false -no-cache
          if [ -s "${{env.PMD_RESULTS_FILE}}" ] # if the size of the file is more than 0 then...
          then
            cat ${{env.PMD_RESULTS_FILE}}
            numberOfViolations=$(grep "" -c ${{env.PMD_RESULTS_FILE}}) # counting number of lines, as the result file has error per line
            echo "Apex code analysis found $numberOfViolations violations" 
            exit 0 # Make it exit 1 when we want this to fail the build
          fi

